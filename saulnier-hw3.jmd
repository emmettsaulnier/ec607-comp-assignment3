---
title: Assignment 3
subtitle: EC 607 - Computational Economics
author: Emmett Saulnier
date: 5/17/2021
---

First, I load packages, create a struct for the model, and set the plot theme.  

```julia 
# Setting up model objects
using Parameters, FastGaussQuadrature, Gadfly, LinearAlgebra

# Struct for the model 
@with_kw mutable struct MParameters
    β::Float64 = 0.9981 # Monthly Discount Factor
    γ::Float64 = 3.0    # Elasticity of substitution
    κ::Float64 = 0.01   # Cost of changing prices    
    W̄::Float63 = 1      # Wages
    μe::Float64 = 0.0   # Mean of random shoc
    σe::Float64 = 0.1   # SD of random shock  

    mugrid::Vector{Float64} = LinRange(0.05,0.5,20)
    spline_order::Int = 3

end;

# Setting plot themes
set_default_plot_size(12inch, 6inch)
Gadfly.push_theme(Theme(major_label_font_size=20pt,minor_label_font_size=14pt,key_label_font_size=16pt,
                        line_width=2pt,point_size=3pt))

```
Assume a unit measure of firms living on $[0,1]$.  An individual firm faces problem of when to change prices.  Firms differ in the quality of their good which is given by $a_{i,t}$.  Assume that $a_{i,t}$ follows a growth rate process in logs

```math
\log(a_{i,i})=\log(a_{i,t-1})+\epsilon_{i,t}
```
where $\epsilon_{i,t}$ is normally distributed with mean $0$, standard deviation $\sigma^2_\epsilon$ and is i.i.d. across agents and time.

Given their current price, $P_{i,t}$, firms face a demand for their good which is given by

```math
D_{i,t}=a_{i,t}^{\gamma-1}\left(P_{i,t}\right)^{-\gamma}.
```

For those who are curious this is the result of monopolistic competition and a Dixit-Stiglitz aggregator with elasticity of substitution given by $\gamma$.  We have normalized the aggregate price level to 1.

We assume that the amount of labor required to produce good of quality $a_{i,t}$ is $a_{i,t}$. Higher quality goods take more effort to produce. If $\bar W$ is the wage rate in this economy, then the per-period profit of a firm is given by

```math
[P_{i,t}-a_{i,t}\bar W]D_{i,t}.
```

Firms can change their prices $P_{i,t}$ every period but must pay a cost $\bar W^{1-\gamma}\kappa$ in order to do so.  Let $\beta$ be the discount factor of these firms. The firm's objective is to maximize

```math
\max_{P_{i,t}} \sum_{t=0}^\infty \beta^t\left([P_{i,t}-a_{i,t}\bar W]a_{i,t}^{\gamma-1}\left(P_{i,t}\right)^{-\gamma}-\bar W^{1-\gamma}\kappa1_{P_{i,t}\neq P_{i,t-1}}\right)
```

given $P_{i,-1}$. $1_{P_{i,t}\neq P_{i,t-1}}$ is an indicator capturing if the firm changes its price.  

## Problem 1  
Let $\mu_{i,t}=\frac{P_{i,t}}{a_{i,t}\bar W}$ be the markup (price over marginal cost) of firm $i$.  Show that you can write the firm's maximization problem as problem as 

```math
\max_{\mu_{i,t}}\bar W^{1-\gamma}\sum_{t=0}^\infty \beta^t\left([\mu_{i,t}-1]\mu_{i,t}^{-\gamma}-\kappa1_{\mu_{i,t}\neq \frac{\mu_{i,t-1}}{\exp(\epsilon_{i,t})}}\right)
```
given $\mu_{i,-1}$


## Problem 2  
Let $V(\mu)$ be the value of a firm entering with markup $\mu$ (this is after it's current quality shock $\epsilon$ is realized so $\mu=\frac{\mu\_}{\exp(\epsilon_i)}$ where $\mu\_$ is last period's markup) which chooses not to change prices this period.  Let $J$ be the value of a firm which elects to change prices this period (why doesn't this depend on $\mu$?).  Write down the Bellman equation(s) of the firm.


## Problem 3  
Let $\beta=0.9981$ (targeting a monthly discount factor), $\gamma =3$, $\kappa =0.01$ and $\sigma_\epsilon = 0.1$.  Write a program to solve the problem of the firm. (Use Gauss-Hermite quadrature to compute the expectation over $\epsilon_i$)

```julia

using Optim, BasisMatrices
# Gauss-Hermite Quadrature for expected value of ϵ
"""
    expectation_normal(h,μ,σ,N)

Compute the expectation of a function h(y) of a normal variable y∼N(μ,σ) using
N point Gauss-Hermite quadrature
"""
function expectation_normal(h,μ,σ,N)
    ξ,w = gausshermite(N)
    x = sqrt(2).*σ.*ξ .+ μ

    return sum(w[i]*h(x[i]) for i in 1:N)/sqrt(pi)
end;


"""
    optimalpolicy(para::NCParameters,Vprime,k)

Computes optimal policy using continuation value function V and current capital
level k given parameters in para.
"""
function optimalpolicy(para::MParameters,Πprime,μ_,ε)
    @unpack β,γ,κ,W̄,μe,σe,mugrid = para
    mu_bounds = [mugrid[1],mugrid[end]]
    # Calculating this period's markup given this period's shock and last period's markup
    μ = μ_/exp(ε)
    # Value if the firm does not change prices  
    V = W̄^(1-γ)*(μ - 1)*μ^(-γ) + β*expectation_normal(ε'->Πprime(μ,ε'),μe,σe,10)
    # Value if the firm does change prices  
    J(μo) = - (W̄^(1-γ)*(μo - 1)*μo^(-γ) - κ + β*expectation_normal(ε->Πprime(μo,ε),μe,σe,10))
    Jresult = optimize(J,mu_bounds[1],mu_bounds[2])
    # Choosing whether to keep prices or change prices 
    if V >= -Jresult.minimum 
        return(μ' = μ, Π = V)
    else 
        return(μ' = Jresult.minimizer, Π = -Jresult.minimum)
    end
end;



"""
    bellmanmap(Vprime,para::NCParameters) 

Apply the bellman map given continuation value function Vprime and shock ε 
"""
function bellmanmap(para::MParameters, Πprime::Interpoland)
    # Getting the basis and nodes for (μ,ε) from Πprime
    basis = Πprime.basis
    X = nodes(basis)[1]
    # Function to be approximated
    f(μ,ε) = optimalpolicy(para,Πprime,μ,ε).Π
    # compute f at each node
    fvals = [f(X[i,:]) for i in 1:size(X,1)]
    f̂ = Interpoland(basis,fvals)
    return f̂
end;


"""
    solvebellman(para::NCParameters,V0::Interpoland)

Solves the bellman equation for a given V0
"""
function solvebellman(para::MParameters, Π0::Interpoland)
    diff = 1
    #Iterate of Bellman Map until difference in coefficients goes to zero
    while diff > 1e-6
        Π = bellmanmap(para,Π0)
        diff = norm(Π.coefs-Π0.coefs,Inf)
        Π0 = Π
    end
    # Now getting the policy rules using the interpolated value function
    pol_basis = Π0.basis
    pol_nodes = nodes(pol_basis)[1]
    pol(μ,ε) = optimalpolicy(para,Π0,μ,ε).μ'
    pol_vals = [pol(X[i,:]) for i in 1:size(pol_nodes,1)]
    return Interpoland(pol_basis,pol_vals),Π0
end;


"""
    getV0(para::NCParameters)

Initializes V0(k) = 0 using the kgrid of para
"""
function getΠ0(para::MParameters)
    @unpack mugrid,spline_order = para
    # Using splines for mu and chebyshev for epsilon
    mu_basis = SplineParams(mugrid,0,spline_order)
    ε_basis = ChebParams(3,-Inf,Inf)
    basis = Basis(mu_basis,ε_basis)

    return Interpoland(basis,(μ,ε)-> 0 .* μ .* ε)
end

para = MParameters()
muprime,B = solvebellman(para,getΠ0(para));

```

## Problem 4  
When do firms change their prices? (You should find that firms change their prices once markups are outside of a certain range of the optimal markup)


## Problem 5  
Write a program to simulate $100,000$ firms to compute an ergodic distribution of firm markups.  Adjust $\kappa$ and $\sigma_\epsilon$ so that in the ergodic distribution 21.9\% of firms change their price every month and the average size of price changes is $0.095$. Compute the average markup
```math
\left(\int_i\mu_{i,t}^{1-\gamma}\right)^\frac1{1-\gamma}
```

in the steady state.


## Problem 6  
Suppose that wage costs unexpectly increase by 5\% (this will reduce the markups of all firms proportionally by 5\%).  Starting from this new distribution simulate the path of of the average markup.  How long does it take firms to adjust prices to pass along these new costs?
